S: STMNTS M MEOF
 | MEOF
 | error MEOF
;


A: ASNEXPR ';'
 | ASNEXPR error MEOF
 | IF '(' BOOLEXPR ')' M A
 | IF '(' BOOLEXPR ')' M A ELSE NN M A
 | EXPR error MEOF
 | WHILE M '(' BOOLEXPR ')' M A
 | FOR '(' ASNEXPR ';' M BOOLEXPR ';' M ASNEXPR ')' M A
 | '{' STMNTS '}'
 | '{' '}'
 | EXPR ';'
 | DECLSTATEMENT
 | FUNCDECL
 | RETURN EXPR ';'           
;

/*Functions */
FUNCDECL: TYPE IDEN '(' PARAMLIST ')' ';'
 | TYPE IDEN '(' PARAMLIST ')' '{' STMNTS '}'
 | TYPE IDEN '(' ')' ';'
 | TYPE IDEN '(' ')' '{' STMNTS '}'
;

PARAMLIST: PARAM ',' PARAMLIST
 | PARAM
;

PARAM: TYPE IDEN
 | TYPE IDEN INDEX
;

/*Declarations*/
DECLSTATEMENT: TYPE DECLLIST ';'
 | TYPE DECLLIST error MEOF
;

DECLLIST: IDEN ',' DECLLIST
 | IDEN INDEX ',' DECLLIST
 | IDEN
 | IDEN '=' EXPR
 | IDEN INDEX
;

INDEX: '[' NUM ']'
 | '[' NUM ']' INDEX
;

TYPE: INT
 | FLOAT
 | CHAR
;


STMNTS: STMNTS M A
 | A M
;


ASSGN: '=' | PASN | MASN | DASN | SASN ;

ASNEXPR: EXPR ASSGN EXPR ;


BOOLEXPR:
  BOOLEXPR OR M BOOLEXPR
 | BOOLEXPR AND M BOOLEXPR
 | '!' BOOLEXPR
 | '(' BOOLEXPR ')'
 | EXPR LT EXPR
 | EXPR GT EXPR
 | EXPR EQ EXPR
 | EXPR NE EXPR
 | EXPR LE EXPR
 | EXPR GE EXPR
 | TR
 | FL
;


EXPR: EXPR '+' EXPR
 | EXPR '-' EXPR
 | EXPR '*' EXPR
 | EXPR '/' EXPR
 | EXPR '%' EXPR
 | FUNC_CALL                  
 | TERM
;

/* Function Calls */
FUNC_CALL: IDEN '(' ARGLIST ')'
 | IDEN '(' ')'
;

ARGLIST: EXPR ',' ARGLIST
 | EXPR
;


TERM: IDEN
 | NUM
 | '(' EXPR ')'
 | '-' TERM
 | IDEN INC
 | IDEN DEC
 | INC IDEN
 | DEC IDEN
;


M:
NN:
